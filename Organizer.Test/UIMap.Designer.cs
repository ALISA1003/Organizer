// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 14.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Organizer.Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// OpenApplication - Используйте "OpenApplicationParams" для передачи параметров в этот метод.
        /// </summary>
        public void OpenApplication()
        {

            // Запуск "%USERPROFILE%\Desktop\Organizer.exe"
            ApplicationUnderTest organizerApplication = ApplicationUnderTest.Launch(this.OpenApplicationParams.ExePath, this.OpenApplicationParams.AlternateExePath);
        }
        
        /// <summary>
        /// ClickContinue - Используйте "ClickContinueParams" для передачи параметров в этот метод.
        /// </summary>
        public void ClickContinue()
        {
            #region Variable Declarations
            WinList uIToDoListList = this.UIОрганайзерWindow.UIToDoListWindow.UIToDoListList;
            WinButton uIВыполнитьButton = this.UIОрганайзерWindow.UIВыполнитьWindow.UIВыполнитьButton;
            #endregion

            // Выберите "05.05.2018 21:00 Протестировать программу" в "toDoList" список
            uIToDoListList.SelectedItemsAsString = this.ClickContinueParams.UIToDoListListSelectedItemsAsString;

            // Щелкните "Выполнить" кнопка
            Mouse.Click(uIВыполнитьButton, new Point(47, 9));
        }
        
        /// <summary>
        /// CloseApplication
        /// </summary>
        public void CloseApplication()
        {
            #region Variable Declarations
            WinButton uIЗакрытьButton = this.UIОрганайзерWindow.UIОрганайзерTitleBar.UIЗакрытьButton;
            #endregion

            // Щелкните "Закрыть" кнопка
            Mouse.Click(uIЗакрытьButton, new Point(12, 16));
        }
        
        /// <summary>
        /// CheckComplite - Используйте "CheckCompliteExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void CheckComplite()
        {
            #region Variable Declarations
            WinListItem uIItem050520182100ПротListItem = this.UIОрганайзерWindow.UIAccomplishedListWindow.UIItem050520182100ПротListItem;
            #endregion

            // Убедитесь, что свойство FriendlyName "05.05.2018 21:00 Протестировать программу" элемент списка равняется "05.05.2018 21:00 Протестировать программу"
            Assert.AreEqual(this.CheckCompliteExpectedValues.UIItem050520182100ПротListItemFriendlyName, uIItem050520182100ПротListItem.FriendlyName);
        }
        
        /// <summary>
        /// ClickDelete - Используйте "ClickDeleteParams" для передачи параметров в этот метод.
        /// </summary>
        public void ClickDelete()
        {
            #region Variable Declarations
            WinList uIToDoListList = this.UIОрганайзерWindow.UIToDoListWindow.UIToDoListList;
            WinButton uIУдалитьButton = this.UIОрганайзерWindow.UIУдалитьWindow.UIУдалитьButton;
            #endregion

            // Выберите "06.05.2018 12:30 Завершить КР" в "toDoList" список
            uIToDoListList.SelectedItemsAsString = this.ClickDeleteParams.UIToDoListListSelectedItemsAsString;

            // Щелкните "Удалить" кнопка
            Mouse.Click(uIУдалитьButton, new Point(43, 13));
        }
        
        /// <summary>
        /// AddTasks - Используйте "AddTasksParams" для передачи параметров в этот метод.
        /// </summary>
        public void AddTasks()
        {
            #region Variable Declarations
            WinEdit uINameOfTaskEdit = this.UIОрганайзерWindow.UINameOfTaskWindow.UINameOfTaskEdit;
            WinEdit uITimeEdit = this.UIОрганайзерWindow.UITimeWindow.UITimeEdit;
            WinCalendar uICalendarCalendar = this.UIОрганайзерWindow.UICalendarWindow.UICalendarCalendar;
            WinButton uIДобавитьButton = this.UIОрганайзерWindow.UIДобавитьWindow.UIДобавитьButton;
            WinWindow uINameOfTaskWindow = this.UIОрганайзерWindow.UIОрганайзерClient.UINameOfTaskWindow;
            #endregion

            // Тип "Сходить за продуктами" в "nameOfTask" надпись
            uINameOfTaskEdit.Text = this.AddTasksParams.UINameOfTaskEditText;

            // Тип "{Tab}" в "nameOfTask" надпись
            Keyboard.SendKeys(uINameOfTaskEdit, this.AddTasksParams.UINameOfTaskEditSendKeys, ModifierKeys.None);

            // Тип "15:00" в "time" надпись
            uITimeEdit.Text = this.AddTasksParams.UITimeEditText;

            // Выберите "17.05.2018" в "calendar" календарь
            uICalendarCalendar.SelectionRangeAsString = this.AddTasksParams.UICalendarCalendarSelectionRangeAsString;

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton, new Point(47, 10));

            // Щелкните "nameOfTask" окно
            Mouse.Click(uINameOfTaskWindow, new Point(81, 0));

            // Тип "Встретиться с друзьями" в "nameOfTask" надпись
            uINameOfTaskEdit.Text = this.AddTasksParams.UINameOfTaskEditText1;

            // Тип "{Tab}" в "nameOfTask" надпись
            Keyboard.SendKeys(uINameOfTaskEdit, this.AddTasksParams.UINameOfTaskEditSendKeys1, ModifierKeys.None);

            // Тип "20:00" в "time" надпись
            uITimeEdit.Text = this.AddTasksParams.UITimeEditText1;

            // Выберите "17.05.2018" в "calendar" календарь
            uICalendarCalendar.SelectionRangeAsString = this.AddTasksParams.UICalendarCalendarSelectionRangeAsString1;

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton, new Point(48, 12));
        }
        
        /// <summary>
        /// ClickCompliteMeet - Используйте "ClickCompliteMeetParams" для передачи параметров в этот метод.
        /// </summary>
        public void ClickCompliteMeet()
        {
            #region Variable Declarations
            WinList uIToDoListList = this.UIОрганайзерWindow.UIToDoListWindow.UIToDoListList;
            WinButton uIВыполнитьButton = this.UIОрганайзерWindow.UIВыполнитьWindow.UIВыполнитьButton;
            #endregion

            // Выберите "17.05.2018 15:00 Сходить за продуктами" в "toDoList" список
            uIToDoListList.SelectedItemsAsString = this.ClickCompliteMeetParams.UIToDoListListSelectedItemsAsString;

            // Щелкните "Выполнить" кнопка
            Mouse.Click(uIВыполнитьButton, new Point(29, 10));
        }
        
        /// <summary>
        /// CheckToDoList - Используйте "CheckToDoListExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void CheckToDoList()
        {
            #region Variable Declarations
            WinListItem uIItem170520182000ВстрListItem = this.UIОрганайзерWindow.UIToDoListWindow.UIItem170520182000ВстрListItem;
            #endregion

            // Убедитесь, что свойство DisplayText "17.05.2018 20:00 Встретиться с друзьями" элемент списка равняется "17.05.2018 20:00 Встретиться с друзьями"
            Assert.AreEqual(this.CheckToDoListExpectedValues.UIItem170520182000ВстрListItemDisplayText, uIItem170520182000ВстрListItem.DisplayText);
        }
        
        /// <summary>
        /// CheckAccompList - Используйте "CheckAccompListExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void CheckAccompList()
        {
            #region Variable Declarations
            WinListItem uIItem170520181500СходListItem = this.UIОрганайзерWindow.UIAccomplishedListWindow.UIItem170520181500СходListItem;
            #endregion

            // Убедитесь, что свойство DisplayText "17.05.2018 15:00 Сходить за продуктами" элемент списка равняется "17.05.2018 15:00 Сходить за продуктами"
            Assert.AreEqual(this.CheckAccompListExpectedValues.UIItem170520181500СходListItemDisplayText, uIItem170520181500СходListItem.DisplayText);
        }
        
        #region Properties
        public virtual OpenApplicationParams OpenApplicationParams
        {
            get
            {
                if ((this.mOpenApplicationParams == null))
                {
                    this.mOpenApplicationParams = new OpenApplicationParams();
                }
                return this.mOpenApplicationParams;
            }
        }
        
        public virtual ClickContinueParams ClickContinueParams
        {
            get
            {
                if ((this.mClickContinueParams == null))
                {
                    this.mClickContinueParams = new ClickContinueParams();
                }
                return this.mClickContinueParams;
            }
        }
        
        public virtual CheckCompliteExpectedValues CheckCompliteExpectedValues
        {
            get
            {
                if ((this.mCheckCompliteExpectedValues == null))
                {
                    this.mCheckCompliteExpectedValues = new CheckCompliteExpectedValues();
                }
                return this.mCheckCompliteExpectedValues;
            }
        }
        
        public virtual ClickDeleteParams ClickDeleteParams
        {
            get
            {
                if ((this.mClickDeleteParams == null))
                {
                    this.mClickDeleteParams = new ClickDeleteParams();
                }
                return this.mClickDeleteParams;
            }
        }
        
        public virtual AddTasksParams AddTasksParams
        {
            get
            {
                if ((this.mAddTasksParams == null))
                {
                    this.mAddTasksParams = new AddTasksParams();
                }
                return this.mAddTasksParams;
            }
        }
        
        public virtual ClickCompliteMeetParams ClickCompliteMeetParams
        {
            get
            {
                if ((this.mClickCompliteMeetParams == null))
                {
                    this.mClickCompliteMeetParams = new ClickCompliteMeetParams();
                }
                return this.mClickCompliteMeetParams;
            }
        }
        
        public virtual CheckToDoListExpectedValues CheckToDoListExpectedValues
        {
            get
            {
                if ((this.mCheckToDoListExpectedValues == null))
                {
                    this.mCheckToDoListExpectedValues = new CheckToDoListExpectedValues();
                }
                return this.mCheckToDoListExpectedValues;
            }
        }
        
        public virtual CheckAccompListExpectedValues CheckAccompListExpectedValues
        {
            get
            {
                if ((this.mCheckAccompListExpectedValues == null))
                {
                    this.mCheckAccompListExpectedValues = new CheckAccompListExpectedValues();
                }
                return this.mCheckAccompListExpectedValues;
            }
        }
        
        public UIОрганайзерWindow UIОрганайзерWindow
        {
            get
            {
                if ((this.mUIОрганайзерWindow == null))
                {
                    this.mUIОрганайзерWindow = new UIОрганайзерWindow();
                }
                return this.mUIОрганайзерWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private OpenApplicationParams mOpenApplicationParams;
        
        private ClickContinueParams mClickContinueParams;
        
        private CheckCompliteExpectedValues mCheckCompliteExpectedValues;
        
        private ClickDeleteParams mClickDeleteParams;
        
        private AddTasksParams mAddTasksParams;
        
        private ClickCompliteMeetParams mClickCompliteMeetParams;
        
        private CheckToDoListExpectedValues mCheckToDoListExpectedValues;
        
        private CheckAccompListExpectedValues mCheckAccompListExpectedValues;
        
        private UIОрганайзерWindow mUIОрганайзерWindow;
        
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "OpenApplication"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class OpenApplicationParams
    {
        
        #region Fields
        /// <summary>
        /// Запуск "%USERPROFILE%\Desktop\Organizer.exe"
        /// </summary>
        public string ExePath = "D:\\Универ\\Системы тестирования ПО\\Organizer\\Organizer\\bin\\Debug\\Organizer.exe";
        
        /// <summary>
        /// Запуск "%USERPROFILE%\Desktop\Organizer.exe"
        /// </summary>
        public string AlternateExePath = "D:\\Универ\\Системы тестирования ПО\\Organizer\\Organizer\\bin\\Debug\\Organizer.exe";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "ClickContinue"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class ClickContinueParams
    {
        
        #region Fields
        /// <summary>
        /// Выберите "05.05.2018 21:00 Протестировать программу" в "toDoList" список
        /// </summary>
        public string UIToDoListListSelectedItemsAsString = "05.05.2018 21:00 Протестировать программу";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "CheckComplite"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class CheckCompliteExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство FriendlyName "05.05.2018 21:00 Протестировать программу" элемент списка равняется "05.05.2018 21:00 Протестировать программу"
        /// </summary>
        public string UIItem050520182100ПротListItemFriendlyName = "05.05.2018 21:00 Протестировать программу";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "ClickDelete"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class ClickDeleteParams
    {
        
        #region Fields
        /// <summary>
        /// Выберите "06.05.2018 12:30 Завершить КР" в "toDoList" список
        /// </summary>
        public string UIToDoListListSelectedItemsAsString = "06.05.2018 12:30 Завершить КР";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AddTasks"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class AddTasksParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "Сходить за продуктами" в "nameOfTask" надпись
        /// </summary>
        public string UINameOfTaskEditText = "Сходить за продуктами";
        
        /// <summary>
        /// Тип "{Tab}" в "nameOfTask" надпись
        /// </summary>
        public string UINameOfTaskEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Тип "15:00" в "time" надпись
        /// </summary>
        public string UITimeEditText = "15:00";
        
        /// <summary>
        /// Выберите "17.05.2018" в "calendar" календарь
        /// </summary>
        public string UICalendarCalendarSelectionRangeAsString = "\"17-May-2018\"-\"17-May-2018\"";
        
        /// <summary>
        /// Тип "Встретиться с друзьями" в "nameOfTask" надпись
        /// </summary>
        public string UINameOfTaskEditText1 = "Встретиться с друзьями";
        
        /// <summary>
        /// Тип "{Tab}" в "nameOfTask" надпись
        /// </summary>
        public string UINameOfTaskEditSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Тип "20:00" в "time" надпись
        /// </summary>
        public string UITimeEditText1 = "20:00";
        
        /// <summary>
        /// Выберите "17.05.2018" в "calendar" календарь
        /// </summary>
        public string UICalendarCalendarSelectionRangeAsString1 = "\"17-May-2018\"-\"17-May-2018\"";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "ClickCompliteMeet"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class ClickCompliteMeetParams
    {
        
        #region Fields
        /// <summary>
        /// Выберите "17.05.2018 15:00 Сходить за продуктами" в "toDoList" список
        /// </summary>
        public string UIToDoListListSelectedItemsAsString = "17.05.2018 15:00 Сходить за продуктами";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "CheckToDoList"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class CheckToDoListExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство DisplayText "17.05.2018 20:00 Встретиться с друзьями" элемент списка равняется "17.05.2018 20:00 Встретиться с друзьями"
        /// </summary>
        public string UIItem170520182000ВстрListItemDisplayText = "17.05.2018 20:00 Встретиться с друзьями";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "CheckAccompList"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class CheckAccompListExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство DisplayText "17.05.2018 15:00 Сходить за продуктами" элемент списка равняется "17.05.2018 15:00 Сходить за продуктами"
        /// </summary>
        public string UIItem170520181500СходListItemDisplayText = "17.05.2018 15:00 Сходить за продуктами";
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UIОрганайзерWindow : WinWindow
    {
        
        public UIОрганайзерWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Органайзер";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Органайзер");
            #endregion
        }
        
        #region Properties
        public UIToDoListWindow UIToDoListWindow
        {
            get
            {
                if ((this.mUIToDoListWindow == null))
                {
                    this.mUIToDoListWindow = new UIToDoListWindow(this);
                }
                return this.mUIToDoListWindow;
            }
        }
        
        public UIВыполнитьWindow UIВыполнитьWindow
        {
            get
            {
                if ((this.mUIВыполнитьWindow == null))
                {
                    this.mUIВыполнитьWindow = new UIВыполнитьWindow(this);
                }
                return this.mUIВыполнитьWindow;
            }
        }
        
        public UIОрганайзерTitleBar UIОрганайзерTitleBar
        {
            get
            {
                if ((this.mUIОрганайзерTitleBar == null))
                {
                    this.mUIОрганайзерTitleBar = new UIОрганайзерTitleBar(this);
                }
                return this.mUIОрганайзерTitleBar;
            }
        }
        
        public UIAccomplishedListWindow UIAccomplishedListWindow
        {
            get
            {
                if ((this.mUIAccomplishedListWindow == null))
                {
                    this.mUIAccomplishedListWindow = new UIAccomplishedListWindow(this);
                }
                return this.mUIAccomplishedListWindow;
            }
        }
        
        public UIУдалитьWindow UIУдалитьWindow
        {
            get
            {
                if ((this.mUIУдалитьWindow == null))
                {
                    this.mUIУдалитьWindow = new UIУдалитьWindow(this);
                }
                return this.mUIУдалитьWindow;
            }
        }
        
        public UINameOfTaskWindow UINameOfTaskWindow
        {
            get
            {
                if ((this.mUINameOfTaskWindow == null))
                {
                    this.mUINameOfTaskWindow = new UINameOfTaskWindow(this);
                }
                return this.mUINameOfTaskWindow;
            }
        }
        
        public UITimeWindow UITimeWindow
        {
            get
            {
                if ((this.mUITimeWindow == null))
                {
                    this.mUITimeWindow = new UITimeWindow(this);
                }
                return this.mUITimeWindow;
            }
        }
        
        public UICalendarWindow UICalendarWindow
        {
            get
            {
                if ((this.mUICalendarWindow == null))
                {
                    this.mUICalendarWindow = new UICalendarWindow(this);
                }
                return this.mUICalendarWindow;
            }
        }
        
        public UIДобавитьWindow UIДобавитьWindow
        {
            get
            {
                if ((this.mUIДобавитьWindow == null))
                {
                    this.mUIДобавитьWindow = new UIДобавитьWindow(this);
                }
                return this.mUIДобавитьWindow;
            }
        }
        
        public UIОрганайзерClient UIОрганайзерClient
        {
            get
            {
                if ((this.mUIОрганайзерClient == null))
                {
                    this.mUIОрганайзерClient = new UIОрганайзерClient(this);
                }
                return this.mUIОрганайзерClient;
            }
        }
        #endregion
        
        #region Fields
        private UIToDoListWindow mUIToDoListWindow;
        
        private UIВыполнитьWindow mUIВыполнитьWindow;
        
        private UIОрганайзерTitleBar mUIОрганайзерTitleBar;
        
        private UIAccomplishedListWindow mUIAccomplishedListWindow;
        
        private UIУдалитьWindow mUIУдалитьWindow;
        
        private UINameOfTaskWindow mUINameOfTaskWindow;
        
        private UITimeWindow mUITimeWindow;
        
        private UICalendarWindow mUICalendarWindow;
        
        private UIДобавитьWindow mUIДобавитьWindow;
        
        private UIОрганайзерClient mUIОрганайзерClient;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UIToDoListWindow : WinWindow
    {
        
        public UIToDoListWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "toDoList";
            this.WindowTitles.Add("Органайзер");
            #endregion
        }
        
        #region Properties
        public WinList UIToDoListList
        {
            get
            {
                if ((this.mUIToDoListList == null))
                {
                    this.mUIToDoListList = new WinList(this);
                    #region Условия поиска
                    this.mUIToDoListList.WindowTitles.Add("Органайзер");
                    #endregion
                }
                return this.mUIToDoListList;
            }
        }
        
        public WinListItem UIItem070520181500СходListItem
        {
            get
            {
                if ((this.mUIItem070520181500СходListItem == null))
                {
                    this.mUIItem070520181500СходListItem = new WinListItem(this);
                    #region Условия поиска
                    this.mUIItem070520181500СходListItem.SearchProperties[WinListItem.PropertyNames.Name] = "07.05.2018 15:00 Сходить за продуктами";
                    this.mUIItem070520181500СходListItem.WindowTitles.Add("Органайзер");
                    #endregion
                }
                return this.mUIItem070520181500СходListItem;
            }
        }
        
        public WinListItem UIItem170520182000ВстрListItem
        {
            get
            {
                if ((this.mUIItem170520182000ВстрListItem == null))
                {
                    this.mUIItem170520182000ВстрListItem = new WinListItem(this);
                    #region Условия поиска
                    this.mUIItem170520182000ВстрListItem.SearchProperties[WinListItem.PropertyNames.Name] = "17.05.2018 20:00 Встретиться с друзьями";
                    this.mUIItem170520182000ВстрListItem.WindowTitles.Add("Органайзер");
                    #endregion
                }
                return this.mUIItem170520182000ВстрListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIToDoListList;
        
        private WinListItem mUIItem070520181500СходListItem;
        
        private WinListItem mUIItem170520182000ВстрListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UIВыполнитьWindow : WinWindow
    {
        
        public UIВыполнитьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "accomplishBut";
            this.WindowTitles.Add("Органайзер");
            #endregion
        }
        
        #region Properties
        public WinButton UIВыполнитьButton
        {
            get
            {
                if ((this.mUIВыполнитьButton == null))
                {
                    this.mUIВыполнитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIВыполнитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Выполнить";
                    this.mUIВыполнитьButton.WindowTitles.Add("Органайзер");
                    #endregion
                }
                return this.mUIВыполнитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIВыполнитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UIОрганайзерTitleBar : WinTitleBar
    {
        
        public UIОрганайзерTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.WindowTitles.Add("Органайзер");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("Органайзер");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UIAccomplishedListWindow : WinWindow
    {
        
        public UIAccomplishedListWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "accomplishedList";
            this.WindowTitles.Add("Органайзер");
            #endregion
        }
        
        #region Properties
        public WinListItem UIItem050520182100ПротListItem
        {
            get
            {
                if ((this.mUIItem050520182100ПротListItem == null))
                {
                    this.mUIItem050520182100ПротListItem = new WinListItem(this);
                    #region Условия поиска
                    this.mUIItem050520182100ПротListItem.SearchProperties[WinListItem.PropertyNames.Name] = "05.05.2018 21:00 Протестировать программу";
                    this.mUIItem050520182100ПротListItem.WindowTitles.Add("Органайзер");
                    #endregion
                }
                return this.mUIItem050520182100ПротListItem;
            }
        }
        
        public WinListItem UIItem060520181400ВстрListItem
        {
            get
            {
                if ((this.mUIItem060520181400ВстрListItem == null))
                {
                    this.mUIItem060520181400ВстрListItem = new WinListItem(this);
                    #region Условия поиска
                    this.mUIItem060520181400ВстрListItem.SearchProperties[WinListItem.PropertyNames.Name] = "06.05.2018 14:00 Встретиться с друзьями";
                    this.mUIItem060520181400ВстрListItem.WindowTitles.Add("Органайзер");
                    #endregion
                }
                return this.mUIItem060520181400ВстрListItem;
            }
        }
        
        public WinListItem UIItem170520181500СходListItem
        {
            get
            {
                if ((this.mUIItem170520181500СходListItem == null))
                {
                    this.mUIItem170520181500СходListItem = new WinListItem(this);
                    #region Условия поиска
                    this.mUIItem170520181500СходListItem.SearchProperties[WinListItem.PropertyNames.Name] = "17.05.2018 15:00 Сходить за продуктами";
                    this.mUIItem170520181500СходListItem.WindowTitles.Add("Органайзер");
                    #endregion
                }
                return this.mUIItem170520181500СходListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIItem050520182100ПротListItem;
        
        private WinListItem mUIItem060520181400ВстрListItem;
        
        private WinListItem mUIItem170520181500СходListItem;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UIУдалитьWindow : WinWindow
    {
        
        public UIУдалитьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "deleteBut";
            this.WindowTitles.Add("Органайзер");
            #endregion
        }
        
        #region Properties
        public WinButton UIУдалитьButton
        {
            get
            {
                if ((this.mUIУдалитьButton == null))
                {
                    this.mUIУдалитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIУдалитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Удалить";
                    this.mUIУдалитьButton.WindowTitles.Add("Органайзер");
                    #endregion
                }
                return this.mUIУдалитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIУдалитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UINameOfTaskWindow : WinWindow
    {
        
        public UINameOfTaskWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nameOfTask";
            this.WindowTitles.Add("Органайзер");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameOfTaskEdit
        {
            get
            {
                if ((this.mUINameOfTaskEdit == null))
                {
                    this.mUINameOfTaskEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUINameOfTaskEdit.WindowTitles.Add("Органайзер");
                    #endregion
                }
                return this.mUINameOfTaskEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameOfTaskEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UITimeWindow : WinWindow
    {
        
        public UITimeWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "time";
            this.WindowTitles.Add("Органайзер");
            #endregion
        }
        
        #region Properties
        public WinEdit UITimeEdit
        {
            get
            {
                if ((this.mUITimeEdit == null))
                {
                    this.mUITimeEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITimeEdit.WindowTitles.Add("Органайзер");
                    #endregion
                }
                return this.mUITimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITimeEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UICalendarWindow : WinWindow
    {
        
        public UICalendarWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "calendar";
            this.WindowTitles.Add("Органайзер");
            #endregion
        }
        
        #region Properties
        public WinCalendar UICalendarCalendar
        {
            get
            {
                if ((this.mUICalendarCalendar == null))
                {
                    this.mUICalendarCalendar = new WinCalendar(this);
                    #region Условия поиска
                    this.mUICalendarCalendar.WindowTitles.Add("Органайзер");
                    #endregion
                }
                return this.mUICalendarCalendar;
            }
        }
        #endregion
        
        #region Fields
        private WinCalendar mUICalendarCalendar;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UIДобавитьWindow : WinWindow
    {
        
        public UIДобавитьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "addTaskBut";
            this.WindowTitles.Add("Органайзер");
            #endregion
        }
        
        #region Properties
        public WinButton UIДобавитьButton
        {
            get
            {
                if ((this.mUIДобавитьButton == null))
                {
                    this.mUIДобавитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIДобавитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Добавить";
                    this.mUIДобавитьButton.WindowTitles.Add("Органайзер");
                    #endregion
                }
                return this.mUIДобавитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIДобавитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UIОрганайзерClient : WinClient
    {
        
        public UIОрганайзерClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinControl.PropertyNames.Name] = "Органайзер";
            this.WindowTitles.Add("Органайзер");
            #endregion
        }
        
        #region Properties
        public WinWindow UINameOfTaskWindow
        {
            get
            {
                if ((this.mUINameOfTaskWindow == null))
                {
                    this.mUINameOfTaskWindow = new WinWindow(this);
                    #region Условия поиска
                    this.mUINameOfTaskWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUINameOfTaskWindow.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
                    this.mUINameOfTaskWindow.WindowTitles.Add("Органайзер");
                    #endregion
                }
                return this.mUINameOfTaskWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUINameOfTaskWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Контекст";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIКонтекстMenu UIКонтекстMenu
        {
            get
            {
                if ((this.mUIКонтекстMenu == null))
                {
                    this.mUIКонтекстMenu = new UIКонтекстMenu(this);
                }
                return this.mUIКонтекстMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIКонтекстMenu mUIКонтекстMenu;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "14.0.23107.0")]
    public class UIКонтекстMenu : WinMenu
    {
        
        public UIКонтекстMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Контекст";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIКсегодняшнейдатеMenuItem
        {
            get
            {
                if ((this.mUIКсегодняшнейдатеMenuItem == null))
                {
                    this.mUIКсегодняшнейдатеMenuItem = new WinMenuItem(this);
                    #region Условия поиска
                    this.mUIКсегодняшнейдатеMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "К сегодняшней дате";
                    #endregion
                }
                return this.mUIКсегодняшнейдатеMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIКсегодняшнейдатеMenuItem;
        #endregion
    }
}
